
var sample = (function(){
    
    /*var DEVICE1 = {
        sentence: '$KIPYO,DEVICE1,SENTENCE1',
        logs: [
            '$KIPYO,DEVICE1,SENTENCE1',
            '$KIPYO,DEVICE1,SENTENCE2',
            '$KIPYO,DEVICE1,SENTENCE3',
            '$KIPYO,DEVICE1,SENTENCE4'
        ]
    };
    
    var DEVICE2 = {
        sentence: '$KIPYO,DEVICE2,SENTENCE1',
        logs: [
            '$KIPYO,DEVICE2,SENTENCE1',
            '$KIPYO,DEVICE2,SENTENCE2',
            '$KIPYO,DEVICE2,SENTENCE3',
            '$KIPYO,DEVICE2,SENTENCE4'
        ]
    };
    
    var DEVICE3 = {
        sentence: '$KIPYO,DEVICE3,SENTENCE1',
        logs: [
            '$KIPYO,DEVICE3,SENTENCE1',
            '$KIPYO,DEVICE3,SENTENCE2',
            '$KIPYO,DEVICE3,SENTENCE3',
            '$KIPYO,DEVICE3,SENTENCE4'
        ]
    };*/
    
    var client;
    var hashKey = 'REALTIME';
    var sampleRedis = {};
    
    function redisToDb(){
        if(!client) throw new Error('Redis client not initialized');
        
        
    }
    
    
    
    
    
    
    
    
    var count;
    var devices = {};
    function loadDevices (c){
        if(!client) throw new Error('Redis client not initialized');
        
        count = c;
        for(var j=0; j<count; j++)
            devices['DEVICE' + j] = {};
    }
    
    
    
    var id;
    var sentence;
    var i = 0;
    sampleRedis.simulateTracking = function (){
        id = 'DEVICE' + Math.floor(Math.random() * count);              // DEVICE1
        sentence = '$KIPYO,' + id + ',SENTENCE' + (++i);                // $KIPYO,DEVICE1,SENTENCE1
        
        console.log(sentence);
        
        client.hget(hashKey, id, function(err, result){
            if(err) throw err;
            
            var device;
            
            if(!result){
                device = { sentence: sentence, logs: [sentence]};
            } else {
                device = JSON.parse(result);
                device.sentence = sentence;
                device.logs.push(sentence);
            }
            
            client.hset('REALTIME', id, JSON.stringify(device), client.print);
        });
        
    }
    
    
    
    sampleRedis.init = function(redis){
        client = redis;
        loadDevices(100);
    }
    
    
    return sampleRedis;
}());

module.exports = sample;